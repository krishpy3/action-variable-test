name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run action in"
        required: true
        type: string
        default: "DEV"
      application:
        description: "Name of application"
        required: true
        type: string
        default: "Krish"
  push:

env:
  Envi: "${{ github.event.inputs.application }}_${{ github.event.inputs.environment }}"
  
jobs:
  env-setup:
    name: Create Environment if not available
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment: "${{ env.Envi }}"
    steps:
      - name: Create environment
        run: |
          echo $Envi
          echo ${{ env.Envi }}
    
#       - name: test
#         shell: python
#         run: |
#           import requests
#           import os
#           print(os.environ)
#           headers = {
#               'Accept': 'application/vnd.github+json',
#               'Authorization': 'Bearer ${{ secrets.PAT }}',
#               'X-GitHub-Api-Version': '2022-11-28'
#           }
#           repo = "django-demo"
#           owner = "krishpy3"
#           response = requests.put(f'https://api.github.com/repos/{os.environ["GITHUB_REPOSITORY"]}/environments/{os.environ["envi"]}', headers=headers)
#           print(response.json())
          
#       - name: Create environment
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const result = await github.rest.repos.createOrUpdateEnvironment({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               environment_name: "${{ github.event.inputs.environment }}",
#               deployment_branch_policy: {
#                 protected_branches: true,
#                 custom_branch_policies: false
#               }
#             })
#             console.log(result.data)
